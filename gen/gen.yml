---

#
# Enums
#

- headers:
  - rev/CANDigitalInput.h
  - rev/CANEncoder.h
  - rev/CANError.h
  - rev/CANPIDController.h
  - rev/CANSparkMax.h
  - rev/ControlType.h
  hooks: hooks.py
  templates:
  - src: gen_enum_pybind11.cpp.j2
    dst: rev_enums.cpp.inc
  - src: gen_enum_sim.py.j2
    dst: rev_sim_enums.py


# Each 'class' has 2 autogenerated pieces:
# -> simulated HAL generation
# -> pybind generation

- headers:
  - rev/CANDigitalInput.h
  templates:
  - src: gen_sim.py.j2
    dst: candigitalinput_sim.py
  - src: gen_pybind11.cpp.j2
    dst: CANDigitalInput.cpp.inc
  hooks: hooks.py
  data: CANDigitalInput_data.yml
  vars:
    module_name: CANDigitalInput

- headers:
  - rev/CANEncoder.h
  templates:
  - src: gen_sim.py.j2
    dst: canencoder_sim.py
  - src: gen_pybind11.cpp.j2
    dst: CANEncoder.cpp.inc
  hooks: hooks.py
  data: CANEncoder_data.yml
  vars:
    module_name: CANEncoder

- headers:
  - rev/CANPIDController.h
  templates:
  - src: gen_sim.py.j2
    dst: canpidcontroller_sim.py
  - src: gen_pybind11.cpp.j2
    dst: CANPIDController.cpp.inc
  hooks: hooks.py
  data: CANPIDController_data.yml
  vars:
    module_name: CANPIDController


- headers:
  - rev/CANSparkMax.h
  templates:
  - src: gen_sim.py.j2
    dst: cansparkmax_sim.py
  - src: gen_pybind11.cpp.j2
    dst: CANSparkMax.cpp.inc
  hooks: hooks.py
  data: CANSparkMax_data.yml
  vars:
    module_name: CANSparkMax